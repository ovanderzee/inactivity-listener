{"version":3,"file":"inactivityListener.js","sources":["../src/inactivityListener.js","../src/index.js"],"sourcesContent":["const inactivityListener = (function() {\n    // time until callback is executed - Number in milliseconds\n    let timeLimit\n    // to execute after timeLimit passed - Function\n    let callback\n    // id for inactivity span - generated\n    let timeoutId\n    // timestamp of start or last activity - Date object\n    let timeRoot\n    // to what events to listen\n    let eventTypes = [\n        'keydown',\n        'keyup', // to be sure\n        'mousemove',\n        'mouseenter', // to be sure\n        'mousedown',\n        'mouseup', // to be sure\n        'scroll',\n        'wheel',\n    ]\n\n    /**\n     * Calculate lapsed timeout\n     * @private\n     * @return {Number} milliseconds after start\n     */\n    const timeLapse = function() {\n        const past = new Date() - timeRoot\n        return past\n    }\n\n    /**\n     * Execute callback when time is up\n     * @private\n     */\n    const execute = function() {\n        timeoutId = undefined\n        callback()\n    }\n\n    /**\n     * Put up a new round of waiting\n     * @private\n     */\n    const wait = function() {\n        timeoutId = setTimeout(execute, timeLimit)\n    }\n\n    /**\n     * Terminate the timeout\n     * @private\n     */\n    const stop = function() {\n        clearTimeout(timeoutId)\n    }\n\n    /**\n     * Reset critical values\n     * and start waiting again.\n     * Works when the timeout is set\n     */\n    const reset = function() {\n        // only when timeout is set\n        if (!timeoutId) return\n        stop()\n        timeRoot = new Date()\n        wait()\n    }\n\n    /**\n     * Start waiting with same timelimit and callback\n     * Works when the timeout is completed\n     * @return {Number} milliseconds after start\n     */\n    const restart = function() {\n        // not when timeout is set\n        if (timeoutId) return\n        // not when functionality is untouched\n        if (!timeLimit || !callback) return\n        const past = timeLapse()\n        timeRoot = new Date()\n        wait()\n        return past\n    }\n\n    /**\n     * Add or remove EventListeners\n     * @private\n     * @param {String} aim - 'add' | 'remove'\n     */\n    const eventHandling = function(aim) {\n        // event options\n        const eventOptions = { passive: true, capture: true }\n\n        eventTypes.forEach(function(type) {\n            const handler = `on${type}`\n            if (handler in window) {\n                window[aim + 'EventListener'](type, reset, eventOptions)\n            } else if (handler in window) {\n                document[aim + 'EventListener'](type, reset, eventOptions)\n            } else {\n                console.error(`inactivityListener rejected ${type} event`)\n            }\n        })\n    }\n\n    /**\n     * Find the id's, even when the box was changed\n     * @param {Number} waitTime - time in milliseconds\n     * @param {Function} action - callback\n     */\n    const start = function(waitTime, action) {\n        timeLimit = waitTime\n        callback = action\n        eventHandling('add')\n        wait()\n    }\n\n    /**\n     * Cleanup for singe page apps\n     * @private\n     */\n    const destroy = function() {\n        stop()\n        eventHandling('remove')\n    }\n\n    return {\n        start: start,\n        reset: reset,\n        restart: restart,\n        destroy: destroy,\n    }\n})()\n\nexport { inactivityListener }\n","import { inactivityListener } from './inactivityListener'\n\nconst index = inactivityListener\n\nexport default index\n"],"names":["index","timeLimit","callback","timeoutId","timeRoot","eventTypes","execute","undefined","wait","setTimeout","stop","clearTimeout","reset","Date","eventHandling","aim","eventOptions","passive","capture","forEach","type","handler","window","document","console","error","start","waitTime","action","restart","past","destroy"],"mappings":"AAAA,MCEMA,EDFqB,WAEvB,IAAIC,EAEAC,EAEAC,EAEAC,EAEAC,EAAa,CACb,UACA,QACA,YACA,aACA,YACA,UACA,SACA,SAQJ,MASMC,EAAU,WACZH,OAAYI,EACZL,KAOEM,EAAO,WACTL,EAAYM,WAAWH,EAASL,IAO9BS,EAAO,WACTC,aAAaR,IAQXS,EAAQ,WAELT,IACLO,IACAN,EAAW,IAAIS,KACfL,MAwBEM,EAAgB,SAASC,GAE3B,MAAMC,EAAe,CAAEC,SAAS,EAAMC,SAAS,GAE/Cb,EAAWc,SAAQ,SAASC,GACxB,MAAMC,EAAU,KAAKD,IACjBC,KAAWC,OACXA,OAAOP,EAAM,iBAAiBK,EAAMR,EAAOI,GACpCK,KAAWC,OAClBC,SAASR,EAAM,iBAAiBK,EAAMR,EAAOI,GAE7CQ,QAAQC,MAAM,+BAA+BL,eA0BzD,MAAO,CACHM,MAjBU,SAASC,EAAUC,GAC7B3B,EAAY0B,EACZzB,EAAW0B,EACXd,EAAc,OACdN,KAcAI,MAAOA,EACPiB,QAxDY,WAEZ,GAAI1B,EAAW,OAEf,IAAKF,IAAcC,EAAU,OAC7B,MAAM4B,EApDO,IAAIjB,KAAST,EAuD1B,OAFAA,EAAW,IAAIS,KACfL,IACOsB,GAiDPC,QATY,WACZrB,IACAI,EAAc,YA5HK"}