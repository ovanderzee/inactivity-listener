const e=function(){let e,n,t,o,i,s=["keydown","keyup","mousemove","mouseenter","mousedown","mouseup","scroll","wheel"],r="void";const a=function(){r="lapse";try{n()}catch(e){console.error("inactivityListener executed a erroneous callback")}},c=function(){r="busy",o=new Date,Number.isNaN(t)||d(),t=window.setTimeout(a,e)},d=function(){clearTimeout(t),t=Number.NaN},u=function(){"busy"===r&&(d(),c())},l=function(e){const n={passive:!0,capture:!0};let t=0;i.forEach((function(o){const i=`on${o}`;if(i in window){("add"===e?window.addEventListener:window.removeEventListener)(o,u,n),t++}else if(i in document){("add"===e?document.addEventListener:document.removeEventListener)(o,u,n),t++}else"add"===e&&console.warn(`inactivityListener rejected ${o}-event`)})),t||"add"!==e||console.warn("inactivityListener resets only on coded calls!")};return{start:function(t,o,a){e=t,n=o,i=s,Array.isArray(a)&&a.length&&(i=a.join().toLowerCase().split(",")),"void"===r&&l("add"),c()},reset:u,get lapse(){return(new Date).getTime()-o.getTime()},restart:function(){"lapse"===r&&c()},stop:function(){r="void",d(),l("remove")}}}();export{e as default};
//# sourceMappingURL=inactivityListener.js.map
