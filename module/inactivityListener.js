const e=function(){let e,n,t,o,i,s=["keydown","keyup","mousemove","mouseenter","mousedown","mouseup","scroll","wheel"],r="void";const c=function(){r="lapse";try{n()}catch(e){console.error("faulty callback")}},a=function(){r="busy",o=new Date,void 0!==t&&u(),t=setTimeout(c,e)},u=function(){clearTimeout(t),t=void 0},d=function(){"busy"===r&&(u(),a())},l=function(e){const n={passive:!0,capture:!0};let t=0;i.forEach((function(o){const i=`on${o}`;i in window?(window[e+"EventListener"](o,d,n),t++):i in document?(document[e+"EventListener"](o,d,n),t++):"add"===e&&console.warn(`inactivityListener rejected ${o}-event`)})),t||"add"!==e||console.warn("inactivityListener resets only on coded calls!")},f=function(){r="void",u(),l("remove")};return{start:function(t,o,c){e=t,n=o,i=s,Array.isArray(c)&&c.length&&(i=c.join().toLowerCase().split(",")),"void"===r&&l("add"),a()},reset:d,get lapse(){return new Date-o},restart:function(){"lapse"===r&&a()},stop:f,destroy:f}}();export default e;
//# sourceMappingURL=inactivityListener.js.map
