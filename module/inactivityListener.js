const e=function(){let e,n,t,o,c=["keydown","keyup","mousemove","mouseenter","mousedown","mouseup","scroll","wheel"],i="void";const r=function(){i="lapse";try{n()}catch(e){console.error("faulty callback")}},u=function(){i="busy",o=new Date,void 0!==t&&s(),t=setTimeout(r,e)},s=function(){clearTimeout(t),t=void 0},a=function(){"busy"===i&&(s(),u())},d=function(e){const n={passive:!0,capture:!0};c.forEach((function(t){const o=`on${t}`;o in window?window[e+"EventListener"](t,a,n):o in document?document[e+"EventListener"](t,a,n):console.error(`inactivityListener rejected ${t} event`)}))};return{start:function(t,o){e=t,n=o,"void"===i&&d("add"),u()},reset:a,get lapse(){return new Date-o},restart:function(){"lapse"===i&&u()},destroy:function(){i="void",s(),d("remove")}}}();export default e;
//# sourceMappingURL=inactivityListener.js.map
